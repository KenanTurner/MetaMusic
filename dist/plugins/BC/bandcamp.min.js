import HTML from '../HTML/html.min.js';
export default class BC extends HTML{static proxy_url="../../src/plugins/BC/bandcamp-proxy.php";static Track=class extends HTML.Track{constructor(t){super(t),this.filetype="BC",this.bc_url=this.src}toJSON(){let t=super.toJSON();return t.src=this.bc_url,t}static fromJSON(t){return new BC.Track(JSON.parse(t))}};constructor(t=!0){super(t)}async load(t){if(!this.constructor.isValidTrack(t))throw new Error("Invalid Filetype");if(t.bc_url!==t.src)return super.load(t);let r=this.waitForEvent("loaded");try{let r=await fetch(this.constructor.proxy_url,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({href:t.bc_url})}),e=await r.json();if(0===Object.values(e).length)throw new Error("Invalid BC url");t.src=Object.values(e)[0],super.load(t)}catch(t){this.publish(new this.constructor.Event("error"))}return r}async seek(t){let r=await this.getStatus(),e=await super.seek(t);return t>=r.duration&&this.publish(new this.constructor.Event("ended")),e}}
