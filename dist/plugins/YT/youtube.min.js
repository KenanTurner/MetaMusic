import init from './iframe-api.js';
import Player from '../../core.min.js';
export default class YT extends Player{static Track=class extends Player.Track{constructor(t){super(t),this.filetype="YT"}static fromJSON(t){return new YT.Track(JSON.parse(t))}};constructor(t=!1){super(t),this._iframe_id="_YT_"+Math.random().toString(36).substring(7),this.constructor._YT||init(this.constructor);let e=document.createElement("div");e.id=this._iframe_id,e.style.display="none",e.style.pointerEvents="none",document.body.append(e);let i={height:"144",width:"100%",playerVars:{controls:0,disablekb:1,fs:0,modestbranding:1,playsinline:1}};this.constructor._YT.ready(function(){(function(t){return function(e){return this[t](e)}.bind(this)}).bind(this);this._player=new window.YT.Player(this._iframe_id,i),this._player.addEventListener("onStateChange",function(t){t.data===window.YT.PlayerState.PLAYING&&(this._player._timer=setInterval(function(){this.publish(new this.constructor.Event("timeupdate"))}.bind(this),100)),t.data!==window.YT.PlayerState.PLAYING&&clearInterval(this._player._timer)}.bind(this)),this._player.addEventListener("onStateChange",function(t){switch(console.debug("YT State Change: ",t.data),t.data){case window.YT.PlayerState.ENDED:this.publish(new this.constructor.Event("ended"));break;case window.YT.PlayerState.PLAYING:this.publish(new this.constructor.Event("play"));break;case window.YT.PlayerState.PAUSED:this.publish(new this.constructor.Event("pause"));break;case window.YT.PlayerState.CUED:this.publish(new this.constructor.Event("cued"))}}.bind(this)),this._player.addEventListener("onError",function(t){this.publish(new this.constructor.Event("error"))}.bind(this)),this._player.addEventListener("onReady",function(t){this._ready=!0,this.publish(new this.constructor.Event("ready"))}.bind(this))}.bind(this))}async load(t){if(!this.constructor.isValidTrack(t))throw new Error("Invalid Filetype");let e=await this.getStatus(),i=this.waitForEvent("cued");try{let s=this.constructor.getYoutubeId(t.src);this._player.cueVideoById(s,0),1!==e.volume&&(await i,await this.setVolume(e.volume))}catch(t){this.publish(new this.constructor.Event("error"))}return await i,await this.setVolume(0),await this.play(),await this.stop(),await this.setVolume(e.volume),this.publish(new this.constructor.Event("loaded"))}async waitForChange(t,e,i=50,...s){let a=await t(...s);return a!==e?a:(await new Promise((function(t,e){setTimeout(t,i)})),this.waitForChange(t,e,i,...s))}async play(){let t=await this.getStatus(),e=this.waitForEvent("play");return t.paused?(this._player.playVideo(),e):this.publish(new this.constructor.Event("play"))}async pause(){let t=await this.getStatus(),e=this.waitForEvent("pause");return t.paused?this.publish(new this.constructor.Event("pause")):(this._player.pauseVideo(),e)}async seek(t){let e=await this.getStatus(),i=this.waitForEvent("timeupdate");return this._player.seekTo(t,!0),t<e.duration-1&&e.time!==t&&await this.waitForChange(this.getStatus.bind(this),e.time,50,"time"),this.publish(new this.constructor.Event("timeupdate")),i}async setVolume(t){let e=await this.getStatus(),i=this.waitForEvent("volumechange");return this._player.setVolume(100*t),t!==e.volume&&await this.waitForChange(this.getStatus.bind(this),e.volume,50,"volume"),this.publish(new this.constructor.Event("volumechange")),i}async setMuted(t){let e=await this.getStatus();return t?this._player.mute():this._player.unMute(),t!==e.muted&&await this.waitForChange(this.getStatus.bind(this),e.muted,50,"muted"),this.publish(new this.constructor.Event("volumechange"))}async stop(){let t=this.waitForEvent("cued");return this._player.stopVideo(),await t,this.publish(new this.constructor.Event("stop"))}async getStatus(t){let e={src:this._player.getVideoUrl(),time:this._player.getCurrentTime(),duration:this._player.getDuration(),volume:this._player.getVolume()/100,paused:1!=this._player.getPlayerState(),muted:this._player.isMuted()};return t?e[t]:e}async destroy(){return clearInterval(this._player._myTimer),this._player.destroy(),document.getElementById(this._iframe_id).remove(),delete this._iframe_id,super.destroy()}static getYoutubeId(t){try{let e=new URL(t);if("www.youtube.com"==e.hostname||"youtu.be"==e.hostname){if("/watch"==e.pathname){let t=e.search.indexOf("?v=");return e.search.substr(t+3,11)}return e.pathname.substr(1,11)}throw new Error("Invalid url")}catch(t){throw new Error("Invalid url")}}}
