var ModuleManager={relative_path:"../",importModule:function(...e){if(0==e.length)return Promise.reject({});let t=e.shift();return import(ModuleManager.relative_path+t).then(function(e){let t={};for(let n in e)t[n]=e[n];return ModuleManager.await?new Promise(function(e,t){ModuleManager.awaits[ModuleManager.await]=e,ModuleManager.await=void 0}):Promise.resolve(t)}).catch(function(n){return console.log("Error loading "+t,n),ModuleManager.importModule(...e)})},importModules:function(e){for(let t in e)e[t]=ModuleManager.importModule(...e[t]).then(function(n){e[t]=n},function(e){console.log(t+" failed to load any files!")});return Promise.allSettled(Object.values(e)).then(function(){return Promise.resolve(e)})},importScript:function(...e){if(0==e.length)return Promise.reject({});let t=e.shift(),n=document.head,o=document.createElement("script");return o.type="text/javascript",o.src=t,new Promise(function(e,t){o.onreadystatechange=e,o.onload=e,o.onerror=t,n.appendChild(o)}).catch(function(n){return console.log("Error loading "+t,n),ModuleManager.importScript(...e)})},importScripts:function(e){for(let t in e)e[t]=ModuleManager.importScript(...e[t]).catch(function(e){console.log(t+" failed to load any files!")});return Promise.allSettled(Object.values(e)).then(function(){return Promise.resolve(e)})},fetch:function(e,t=function(e){return e}){let n=[];return e.forEach(function(e,o,r){let i=fetch(e).then(t).then(function(e){n[o]=e},function(t){console.error("Failed to fetch: ",e)});n.push(i)}),Promise.allSettled(n).then(function(){return Promise.resolve(n)})},fetchJSON:function(e){return ModuleManager.fetch(e,function(e){return e.json()})}};
class Track{constructor(t){if(!t.src||!t.title)throw new Error("Invalid Constructor! Title and src are required!");this.filetype="DEFAULT",this.src=t.src,this.title=t.title}toJSON(){let t={};return t.filetype=this.filetype,t.src=this.src,t.title=this.title,t}clone(){return this.constructor.fromJSON(JSON.stringify(this))}equals(t){return JSON.stringify(this)===JSON.stringify(t)}compare(t,r="title"){return this[r]<t[r]?-1:this[r]>t[r]?1:this[r]===t[r]?0:void 0===this[r]?-1:void 0===t[r]?1:0}toString(){return JSON.stringify(this)}valueOf(){return JSON.stringify({src:this.src,title:this.title})}static fromJSON(t){return new Track(JSON.parse(t))}}
class EventTarget{constructor(r=!0){this._subscribers={all:[]},this._ready=r}subscribe(r,s,t){if("function"!=typeof s)throw new Error("Callback must be a function");let e={callback:s};t&&(e.once=t.once),t&&(e.error=t.error),this._subscribers[r]||(this._subscribers[r]=[]),this._subscribers[r].push(e),"ready"==r&&this._ready&&this._publish("ready")}unsubscribe(r,s,t){if("function"!=typeof s)throw new Error("Callback must be a function");let e={callback:s};if(t&&(e.once=t.once),t&&(e.error=t.error),this._subscribers[r]){var i=this._subscribers[r].filter(function(r){return r===e});this._subscribers[r]=i}}_publish(r){if(!this._ready)return;let s=new this.constructor.Event(r,this.getStatus(),this);if("error"===r)for(let r in this._subscribers){let t=this._subscribers[r].filter(function(r){return r.error&&r.error(s),!r.error||!r.once});this._subscribers[r]=t}let t=function(r){return r.callback(s),!r.once};return"all"!==r&&(this._subscribers.all=this._subscribers.all.filter(t)),this._subscribers[r]?(this._subscribers[r]=this._subscribers[r].filter(t),s):s}getStatus(){}waitForEvent(r){return new Promise(function(s,t){this.subscribe(r,s,{once:!0,error:t})}.bind(this))}chain(r,...s){return function(t){return this[r](...s)}.bind(this)}}EventTarget.Event=class{constructor(r,s,t){this.type=r,this.data=s,this.target=t}};
class Album extends EventTarget{constructor(t={}){if(super(),!t.title)throw new Error("Invalid Constructor. Title is required");this.title=t.title,this.tracks=[],t.tracks&&this.push(...t.tracks),this._unsorted=t._unsorted}_cloneTrack(t){if(!this.constructor.players[t.filetype])throw new Error("Unsupported Track Type: "+t.filetype);let r=new this.constructor.players[t.filetype].Track(t);if(t.clone&&(r=t.clone()),!this.constructor._validTrack(r))throw new Error("Invalid Track!");return r}insert(t,...r){r.forEach(function(r){if(Album.prototype.isPrototypeOf(r))return this.insert(t,...r.tracks);try{if(t>=this.length)return this.push(r),void t++;let s=this._cloneTrack(r),e=0;if(this.length>0){let r=function(t,r){return(t%r+r)%r};e=this.tracks[r(t,this.length)].track_num,this.tracks.forEach(function(t,r,s){t.track_num>=e&&s[r].track_num++})}s.track_num=e,this.tracks.splice(t,0,s),t++}catch(t){console.error(t)}}.bind(this)),r.length>0&&this._publish("add")}push(...t){t.forEach(function(t){if(Album.prototype.isPrototypeOf(t))return this.push(...t.tracks);try{let r=this._cloneTrack(t),s=Math.max(...this.getInfo("track_num"))+1;0==this.length&&(s=0),r.track_num=s,this.tracks.push(r)}catch(t){console.error(t)}}.bind(this)),t.length>0&&this._publish("add")}remove(...t){t.forEach(function(t){if(Album.prototype.isPrototypeOf(t))return this.remove(...t.tracks);this.tracks=this.tracks.filter(function(r){if(!r.equals(t))return!0})}.bind(this)),t.length>0&&this._publish("remove")}shuffle(){for(let t=this.length-1;t>0;t--){const r=Math.floor(Math.random()*(t+1));[this.tracks[t],this.tracks[r]]=[this.tracks[r],this.tracks[t]]}this._publish("shuffle")}filter(t){let r=this.clone();return r.clear(),this.tracks.forEach(function(s,e,i){t(s,e,i)&&r.push(s)}),r}find(t){return this.tracks.findIndex(function(r){return r.equals(t)})}has(t){return this.tracks.some(function(r){if(r.equals(t))return!0})}sort(t="track_num",r=!1,s=!0){this.tracks.sort(function(r,s){let e=r.compare(s,t);return 0===e&&(e=r.compare(s,"title")),0===e&&(e=r.compare(s,"src")),e}),r&&this.tracks.reverse(),s&&this._publish("sort")}clear(){this.tracks.length=0,this._publish("clear")}get length(){return this.tracks.length}toJSON(t){let r={};return r.title=this.title,r.tracks=[...this.tracks],r._unsorted=this._unsorted,this._unsorted||r.tracks.sort(function(t,r){let s=t.compare(r,"track_num");return 0===s&&(s=t.compare(r,"title")),0===s&&(s=t.compare(r,"src")),s}),r.tracks.forEach(function(t,s){r.tracks[s]=t.toJSON()}),r}clone(){return this.constructor.fromJSON(JSON.stringify(this))}equals(t){return JSON.stringify(this)===JSON.stringify(t)}toString(){return JSON.stringify(this)}getInfo(t){let r=[];return this.tracks.forEach(function(s){void 0!==s[t]&&r.push(s[t])}.bind(this)),r}static _validTrack(t){return Object.values(Album.players).some(function(r){return r._validTrack(t)})}getStatus(){return"Overridden in album.js"}}Album.players={},Album.fromJSON=function(t){return new Album(JSON.parse(t))};
class MetaMusic extends Album{constructor(t={}){Album.players=MetaMusic.players,super({title:"queue",_unsorted:!0}),this._ready=!1,t.tracks&&this.push(...t.tracks),this._players={};let e=Object.values(this.constructor.players);if(0==e.length)throw new Error("At least one player is required!");e.forEach(function(t){this._players[t.name]=new t,this._players[t.name].subscribe("timeupdate",function(t){this._player===t.target&&(this._status.time=t.data.time),this.handleEvent("timeupdate")(t)}.bind(this),this.handleEvent("error",{paused:!0})),this._players[t.name].subscribe("ended",this.handleEvent("ended",{},"next"))}.bind(this)),this._track,this._player,this._status={src:"",time:0,duration:0,volume:1,paused:!0,shuffled:!1},this._ready=!1,this.waitForAll("waitForEvent","ready").then(function(){this._ready=!0,this._publish("ready"),this.length>0&&this.load(this.tracks[0])}.bind(this))}insertNext(...t){let e=this.find(this._track)+1;return this.insert(e,...t)}updateTrackNum(){this.tracks.forEach(function(t,e,s){s[e].track_num=e})}shuffle(){let t=this.find(this._track);if(-1===t)return super.shuffle();this._status.shuffled||this.updateTrackNum();let e=0==t&&0==this._status.time;if(this._ready=!1,e)super.shuffle(),this.load(this.tracks[0]);else{let s=this.filter(function(e,s,r){return s<t}),r=this.filter(function(e,s,r){return s>t});e&&r.insert(0,this._track),s.shuffle(),r.shuffle(),e||s.push(this._track),this.clear(),this.push(s,r)}this._ready=!0,this._status.shuffled=!0,this._publish("shuffle")}unshuffle(){this._status.shuffled&&(this.sort("track_num"),this._status.shuffled=!1)}handleEvent(t,e={},s){return function(r){for(let t in e)this._status[t]=e[t];return"error"===t?(this._publish(t),Promise.reject(r)):(r&&this._player===r.target&&this._publish(t),s&&this[s](),r)}.bind(this)}play(){return this._track?this._player.play().then(this.handleEvent("play",{paused:!1})).catch(this.handleEvent("error",{paused:!0})):Promise.reject("Track needs to be loaded first!")}pause(){return this._track?this._player.pause().then(this.handleEvent("pause",{paused:!0})).catch(this.handleEvent("error",{paused:!0})):Promise.reject("Track needs to be loaded first!")}stop(){return this._track?this._player.stop().then(this.handleEvent("stop",{paused:!0})).catch(this.handleEvent("error",{paused:!0})):Promise.reject("Track needs to be loaded first!")}seek(t){return this._track?this._player.seek(t).then(this.handleEvent("timeupdate")).catch(this.handleEvent("error",{paused:!0})):Promise.reject("Track needs to be loaded first!")}fastForward(t){return this._track?this._player.fastForward(t).then(this.handleEvent("timeupdate")).catch(this.handleEvent("error",{paused:!0})):Promise.reject("Track needs to be loaded first!")}setVolume(t){return this.waitForAll("setVolume",t).then(function(e){return this._status.volume=t,this._publish("volumechange")}.bind(this)).catch(this.handleEvent("error",{paused:!0}))}load(t){this._track&&this.stop();try{return this._track=t.clone(),this._player=this._players[this._track.filetype],this._player.load(this._track).then(function(t){return this._status.src=t.data.src,this._status.duration=t.data.duration,this._status.time=0,Promise.resolve(t)}.bind(this)).then(this.handleEvent("loaded")).catch(this.handleEvent("error",{paused:!0}))}catch(t){return Promise.reject(t)}}next(t=1){if(0===this.length)return Promise.reject("Empty playlist!");let e=this.find(this._track);if(-1===e)return Promise.reject("Unable to find next track!");let s=function(t,e){return(t%e+e)%e};e+t!=s(e+t,this.length)&&(this._status.paused=!0,this._publish("ended")),e=s(e+t,this.length);let r=this.tracks[e],i=this._status.paused;return this.load(r).then(function(t){return this._publish("next"),i?t:this.play()}.bind(this),function(t){return this._publish("error"),console.log("Failed to load!"),t}.bind(this))}previous(t=1){return this.next(-t)}destroy(){return this.waitForAll("destroy").then(function(){this._ready=!1}.bind(this))}all(t,...e){return Object.values(this._players).map(function(s){try{return s[t](...e)}catch(t){return Promise.reject(t)}})}waitForAll(t,...e){return Promise.allSettled(this.all(t,...e))}playerStatus(){return Promise.all(this.all("getStatus"))}getStatus(){let t=JSON.parse(JSON.stringify(this._status));return t.track=this._track,t.player=this._player,t}}MetaMusic.fromJSON=function(t){let e={...JSON.parse(t),...Album.fromJSON(t)};return new MetaMusic(e)};
export {Track, EventTarget, ModuleManager, Album, MetaMusic};

